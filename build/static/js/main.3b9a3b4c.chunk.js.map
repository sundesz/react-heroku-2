{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","buttonLabel","important","content","onClick","Notification","message","className","Footer","style","color","fontStyle","fontSize","baseUrl","exportedObject","getAll","axios","get","then","response","data","create","newObj","post","update","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMsg","setErrorMsg","useEffect","console","log","noteService","initialNotes","length","notesToShow","filter","n","map","find","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","e","preventDefault","noteObj","date","Date","toISOString","Math","random","onChange","target","value","type","ReactDOM","render","document","getElementById"],"mappings":"0LAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAcF,EAAKG,UAAY,qBAAuB,iBAE5D,OACE,+BACGH,EAAKI,QADR,QACwB,IACtB,wBAAQC,QAASJ,EAAjB,SAAoCC,QCE3BI,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGF,qBAAKC,UAAU,QAAf,SAAwBD,KCYlBE,EAjBA,WAOb,OACE,sBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,2G,gBCRAC,EAAU,YAuBDC,EANQ,CACrBC,OAhBa,WAEb,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAACC,GAAD,OAAcA,EAASC,SAe3CC,OAZa,SAACC,GAEd,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAACC,GAAD,OAAcA,EAASC,SAW3CI,OARa,SAACC,EAAIH,GAElB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UCoF9BO,EAhGH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAgCN,mBAAS,MAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KAUAC,qBARa,WACXC,QAAQC,IAAI,UACZC,EAAYzB,SAASG,MAAK,SAACuB,GACzBH,QAAQC,IAAI,sBACZT,EAASW,QAIG,IAEhBH,QAAQC,IAAI,SAAUV,EAAMa,OAAQ,SAEpC,IAsBMC,EAAcV,EAAUJ,EAAQA,EAAMe,QAAO,SAACC,GAAD,OAAOA,EAAE3C,aA0B5D,OACE,gCACE,uCACA,cAAC,EAAD,CAAcI,QAAS6B,IAEvB,8BACE,yBAAQ/B,QAAS,kBAAM8B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,oBAAI1B,UAAU,QAAd,SACGoC,EAAYG,KAAI,SAAC/C,GAAD,OACf,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBAvCD,SAACyB,GAC1B,IAAM1B,EAAO8B,EAAMkB,MAAK,SAACF,GAAD,OAAOA,EAAEpB,KAAOA,KAClCuB,EAAW,2BAAQjD,GAAR,IAAcG,WAAYH,EAAKG,YAEhDsC,EACGhB,OAAOC,EAAIuB,GACX9B,MAAK,SAAC+B,GACLnB,EAASD,EAAMiB,KAAI,SAACD,GAAD,OAAQA,EAAEpB,KAAOA,EAAKwB,EAAeJ,SAEzDK,OAAM,SAACC,GACNf,EAAY,aAAD,OACIrC,EAAKI,QADT,sCAIXiD,YAAW,WACThB,EAAY,MACX,KAEHN,EAASD,EAAMe,QAAO,SAACC,GAAD,OAAOA,EAAEpB,KAAOA,SAG1Ca,QAAQC,IAAR,wBAA6Bd,EAA7B,yBAkBgC4B,CAAmBtD,EAAK0B,MAF3C1B,EAAK0B,SAOhB,uBAAM6B,SAhEM,SAACC,GACfA,EAAEC,iBAEF,IAAMC,EAAU,CACdtD,QAAS4B,EACT2B,MAAM,IAAIC,MAAOC,cACjB1D,UAAW2D,KAAKC,SAAW,IAM7BtB,EAAYnB,OAAOoC,GAASvC,MAAK,SAAC+B,GAChCnB,EAAS,GAAD,mBAAKD,GAAL,CAAYoB,KACpBjB,EAAW,QAkDX,UACE,uBAAO+B,SArEY,SAACR,GACxBvB,EAAWuB,EAAES,OAAOC,QAoEmBA,MAAOlC,IAC1C,wBAAQmC,KAAK,SAAb,qBAGF,cAAC,EAAD,Q,MC7FNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3b9a3b4c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const buttonLabel = note.important ? 'make not important' : 'make important'\n\n  return (\n    <li>\n      {note.content} &nbsp;{' '}\n      <button onClick={toggleImportance}>{buttonLabel}</button>\n    </li>\n  )\n}\n\nexport default Note\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return <div className=\"error\">{message}</div>\n}\n\nexport default Notification\n","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16,\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2021\n      </em>\n    </div>\n  )\n}\n\nexport default Footer\n","import axios from 'axios'\n\n// const baseUrl = 'http://localhost:3001/api/notes'\n// const baseUrl = 'https://arcane-depths-48839.herokuapp.com/api/notes'\nconst baseUrl = 'api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\n\nconst create = (newObj) => {\n  const request = axios.post(baseUrl, newObj)\n  return request.then((response) => response.data)\n}\n\nconst update = (id, newObj) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObj)\n  return request.then((response) => response.data)\n}\n\nconst exportedObject = {\n  getAll,\n  create,\n  update,\n}\n\nexport default exportedObject\n","import React, { useEffect, useState } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMsg, setErrorMsg] = useState(null)\n\n  const hook = () => {\n    console.log('effect')\n    noteService.getAll().then((initialNotes) => {\n      console.log('promise fulfullied')\n      setNotes(initialNotes)\n    })\n  }\n\n  useEffect(hook, [])\n\n  console.log('render', notes.length, 'notes')\n\n  const handleNoteChange = (e) => {\n    setNewNote(e.target.value)\n  }\n\n  const addNote = (e) => {\n    e.preventDefault()\n\n    const noteObj = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n\n    // setNotes(notes.concat(noteObj))\n    // setNotes([...notes, noteObj])\n\n    noteService.create(noteObj).then((returnedNote) => {\n      setNotes([...notes, returnedNote])\n      setNewNote('')\n    })\n  }\n\n  const notesToShow = showAll ? notes : notes.filter((n) => n.important)\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((n) => (n.id === id ? returnedNote : n)))\n      })\n      .catch((error) => {\n        setErrorMsg(\n          `the note '${note.content}' was already deleted from server`\n        )\n\n        setTimeout(() => {\n          setErrorMsg('')\n        }, 5000)\n\n        setNotes(notes.filter((n) => n.id !== id))\n      })\n\n    console.log(`importance of ${id} needs to be toggled`)\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMsg} />\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul className=\"notes\">\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n\n      <form onSubmit={addNote}>\n        <input onChange={handleNoteChange} value={newNote} />\n        <button type=\"submit\">save</button>\n      </form>\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}